[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "lsst-meas-extensions-multiprofit"
authors = [
    {name="Rubin Observatory Data Management", email="dm-admin@lists.lsst.org"},
]
description = "Tasks and pipelines for running multiprofit with the LSST Butler"
readme = "README.rst"
requires-python = ">=3.10"
license = {file = "LICENSE"}
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Astronomy",
]
keywords = [
    "astronomy",
    "astrophysics",
    "fitting",
    "lsst",
    "models",
    "modeling",
]
dependencies = [
    "astropy",
    "galsim",
    "lsst-gauss2d",
    "lsst-gauss2dfit",
    "lsst-multiprofit",
    "matplotlib",
    "numpy",
    "pydantic",
    "pytest",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/lsst-dm/meas_extensions_multiprofit"

[project.optional-dependencies]
test = [
    "pytest",
]

[tool.setuptools.packages.find]
where = ["python"]

[tool.black]
line-length = 110
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 110

[tool.ruff]
exclude = [
    "__init__.py",
    "tests/*.py",
]
ignore = [
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "N816",
    "N999",
    "D107",
    "D105",
    "D102",
    "D104",
    "D100",
    "D200",
    "D205",
    "D400",
]
line-length = 110
select = [
    "E",  # pycodestyle
    "F",  # pycodestyle
    "N",  # pep8-naming
    "W",  # pycodestyle
    "D",  # pydocstyle
]
target-version = "py311"

[tool.ruff.pycodestyle]
max-doc-length = 79

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.numpydoc_validation]
checks = [
    "all",  # All except the rules listed below.
    "ES01",  # No extended summary required.
    "EX01",  # Example section.
    "GL01",  # Summary text can start on same line as """
    "GL08",  # Do not require docstring.
    "PR04",  # numpydoc parameter types are redundant with type hints
    "RT01",  # Unfortunately our @property trigger this.
    "RT02",  # Does not want named return value. DM style says we do.
    "SA01",  # See Also section.
    "SS05",  # pydocstyle is better at finding infinitive verb.
    "SS06",  # Summary can go into second line.
]
